#!/usr/bin/python2.7

from argparse import ArgumentParser
from subprocess import call
import os
# call(["ls", "-l"])

if(os.getuid()!=0):
  print "permission errors: script requires to be run with root privileges."
  quit()

parser = ArgumentParser()
parser.add_argument("-l", "--laptop-ip", dest="laptopIP",
                    help="your device(laptop) ip-address")
parser.add_argument("-i", "--laptop-interface", dest="laptopInterface", default="eth0",
                    help="name of the (pi) interface that is connected with your device(laptop) (default: eth0)")
parser.add_argument("-r", "--router-interface", dest="routerInterface",
                    help="name of the interface that is connected with router")

parser.add_argument("-changeIP", action='store_true', dest="laptop",
                    help="change ip address of an interface. specify ip address with -l and interface with -j ")
parser.add_argument("-j", "--laptop-pi-interface", dest="laptopPiInterface", default="eth0",
                    help="name of the device interface whose ip address you want to change. this command is used with -changeIP (default: eth0)")

parser.add_argument("-dns", dest="dns",
                    help="your dns name")

parser.add_argument("--no-routing", action='store_true', dest="noRouting",
                    help="include this if you want to use the script to add dns name only. no route manipulation will be done")

args = parser.parse_args()

def ipSetup():
  if not args.laptop:
    if not args.routerInterface or args.laptopIP:
      print "error: missing argument(s) \n required router interface and laptop ip \n ./setmeupfam -h for detail"
      return
    print "***TARGET DEVICE: PI***"
    # sudo ip route add <laptopIP> via <laptopIP> dev eth0
    print "adding laptop route to ip address", args.laptopIP, "and interface", args.laptopInterface, "\n *** \n"
    call(["ip", "route", "add", args.laptopIP, "via", args.laptopIP, "dev", args.laptopInterface])

    # ip route del default
    print "flushing default \n *** \n"
    call(["ip", "route", "del", "default"])

    #  ip route add default dev <routerInterface>
    print "setting default gateway to interface", args.routerInterface, "\n *** \n"
    call(["ip", "route", "add", "default", "dev", args.laptopInterface])
  else:
    if not args.laptopPiInterface or args.laptopIP:
      print "error: missing argument(s) \n required device ip and interface \n ./setmeupfam -h for detail"
    print "***TARGET DEVICE: LAPTOP***"

    # ifconfig <laptopPiInterface> <laptopIP> netmask 255.255.255.0 up
    print "replacing laptop's ethernet interface", args.laptopPiInterface, "'s ip address to", args.laptopIP
    call(["ifconfig", args.laptopPiInterface, args.laptopIP, "netmask", "255.255.255.0", "up"])
    return

def dnsSetup():
  with open('/home/pi/test/new.conf', 'a') as the_file:
    the_file.write('# Generated by resolvconf \n nameserver ', args.dns)
  return

if not args.noRouting:
  ipSetup()
if args.dns:
  dnsSetup()
